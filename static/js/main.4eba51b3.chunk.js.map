{"version":3,"sources":["components/Header.js","context/CategoryContext.js","context/RecipeContext.js","components/Form.js","context/ModalContext.js","components/Recipe.js","components/RecipeList.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","CategoryContext","createContext","ProviderCategory","props","useState","categories","saveCategories","useEffect","a","axios","get","data","drinks","getCategory","Provider","value","children","RecipeContext","ProviderRecipe","recipes","saveRecipes","name","category","search","searchRecipe","consult","saveConsult","url","result","getRecipes","Form","saveSearch","useContext","getRecipeData","e","target","onSubmit","preventDefault","type","placeholder","onChange","map","key","strCategory","ModalContext","ModalProvider","idRecipe","saveIdRecipe","information","saveRecipe","getRecipe","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","Recipe","recipe","modalStyle","open","setOpen","classes","strDrink","src","strDrinkThumb","alt","onClick","idDrink","Modal","onClose","style","strInstructions","ingredients","i","push","showIngredients","RecipeList","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4eba51b3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n    return ( \r\n        <header className='bg-alert'>\r\n            <h1>Search drink recipes</h1>\r\n        </header>\r\n     );\r\n}\r\n \r\nexport default Header;","import React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n// create context\r\n\r\nexport const CategoryContext = createContext();\r\n\r\n// Provider es donde se encuentran las funciones y state\r\nconst ProviderCategory = (props) => {\r\n    // create context'state\r\n    const [ categories, saveCategories ] = useState([])\r\n\r\n    // run the API call\r\n    useEffect(() => {\r\n        const getCategory = async () => {\r\n            const url = 'https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list'\r\n            const categories = await axios.get(url)\r\n            saveCategories(categories.data.drinks)\r\n        }\r\n        getCategory()\r\n    }, [])\r\n\r\n    return (\r\n        <CategoryContext.Provider \r\n            value={{\r\n                categories\r\n            }}\r\n        >\r\n            {props.children}\r\n        </CategoryContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ProviderCategory;","import React, { createContext, useState, useEffect } from 'react';\r\n import axios from 'axios';\r\n\r\nexport const RecipeContext = createContext();\r\n\r\nconst ProviderRecipe = (props) => {\r\n    const [ recipes, saveRecipes ] = useState([])\r\n    const [ search, searchRecipe ] = useState({\r\n        name: '',\r\n        category: '', \r\n    })\r\n    const [ consult, saveConsult ] = useState(false);\r\n    const { name, category } = search;\r\n  \r\n    useEffect(() => {\r\n        if(consult) {\r\n            const getRecipes = async () => {\r\n                const url = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${name}&c=${category}`\r\n                const result = await axios.get(url)\r\n                saveRecipes(result.data.drinks)\r\n                // console.log(result.data.drinks)\r\n            }\r\n            getRecipes()\r\n        }\r\n    }, [search]);\r\n\r\n    return (\r\n        <RecipeContext.Provider\r\n            value={{\r\n                recipes,\r\n                searchRecipe,\r\n                saveConsult\r\n            }}\r\n        >\r\n            {props.children}\r\n        </RecipeContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ProviderRecipe","import React, { useContext, useState } from 'react';\r\nimport { CategoryContext } from '../context/CategoryContext';\r\nimport { RecipeContext } from '../context/RecipeContext';\r\n\r\nconst Form = () => {\r\n    const [ search, saveSearch ] = useState({\r\n        name: '',\r\n        category: ''\r\n    })\r\n\r\n    const { categories } = useContext(CategoryContext);\r\n    const { searchRecipe, saveConsult } = useContext(RecipeContext);\r\n  \r\n    // function to read content\r\n    const getRecipeData = e => {\r\n        saveSearch({\r\n            ...search,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    \r\n    return ( \r\n        <form \r\n            className='col-12'\r\n            onSubmit={ e => {\r\n                e.preventDefault();\r\n                searchRecipe(search);\r\n                saveConsult(true);\r\n            }}\r\n        >\r\n            \r\n            <fieldset className='text-center mt-4'>\r\n                <legend>Search drink for category or ingredient</legend>\r\n            </fieldset>\r\n            <div className='row'>\r\n                <div className='col-md-4'>\r\n                    <input \r\n                        name='name'\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder='Search for ingredient'\r\n                        onChange={getRecipeData}\r\n                    />\r\n                </div>\r\n                <div className='col-md-4'>\r\n                    <select \r\n                        className='form-control'\r\n                        name='category'\r\n                        onChange={getRecipeData}\r\n                    >\r\n                        <option value=''> --Select category-- </option>\r\n                        {categories.map(category => (\r\n                            <option \r\n                                key={category.strCategory}\r\n                                value={category.strCategory}\r\n                            >\r\n                                {category.strCategory}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className='col-md-4'>\r\n                    <input \r\n                        type='submit'\r\n                        className='btn btn-block btn-primary'\r\n                        value='Search recipe'         \r\n                    />\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n \r\nexport default Form;\r\n","import React, { createContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n// create the context\r\nexport const ModalContext = createContext();\r\n\r\nconst ModalProvider = (props) => {\r\n  // provider state\r\n  const [idRecipe, saveIdRecipe] = useState(null);\r\n  const [information, saveRecipe] = useState({});\r\n\r\n  useEffect(() => {\r\n    const getRecipe = async () => {\r\n      if (!idRecipe) return;\r\n\r\n      const url = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${idRecipe}`;\r\n      const result = await axios.get(url);\r\n\r\n      saveRecipe(result.data.drinks[0]);\r\n    };\r\n    getRecipe();\r\n  }, [idRecipe]);\r\n\r\n  return (\r\n    <ModalContext.Provider\r\n      value={{\r\n        information,\r\n        saveIdRecipe,\r\n        saveRecipe,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ModalContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ModalProvider;\r\n","import React, { useContext, useState } from \"react\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { ModalContext } from \"../context/ModalContext\";\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 450,\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst Recipe = ({ recipe }) => {\r\n  const [modalStyle] = useState(getModalStyle);\r\n  const [open, setOpen] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  // extract value's context\r\n  const { information, saveIdRecipe, saveRecipe } = useContext(ModalContext);\r\n\t\r\n\t// // display and format ingredients\r\n\tconst showIngredients = information => {\r\n\t\tlet ingredients = [];\r\n\t\tfor (let i = 1; i < 16; i++) {\r\n\t\t\tif (information[`strIngredient${i}`]) {\r\n\t\t\t\tingredients.push(\r\n\t\t\t\t  <li>{ information[`strIngredient${i}`] } { information[`strMeasure${i}`] }</li>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ingredients;\r\n\t}\r\n\r\n  return (\r\n    <div className=\"col-md-4 mb-3\">\r\n      <div className=\"card\">\r\n        <h2 className=\"card-header\">{recipe.strDrink}</h2>\r\n        <img\r\n          className=\"card-img-top\"\r\n          src={recipe.strDrinkThumb}\r\n          alt={`imagen de ${recipe.strDrink}`}\r\n        />\r\n        \r\n        <div className=\"card-body\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-block btn-primary\"\r\n            onClick={() => {\r\n              saveIdRecipe(recipe.idDrink);\r\n              handleOpen();\r\n            }}\r\n          >\r\n            Watch recipe\r\n          </button>\r\n          <Modal\r\n            open={open}\r\n            onClose={() => {\r\n              saveIdRecipe(null);\r\n              saveRecipe({})\r\n              handleClose();\r\n            }}\r\n          >\r\n            <div style={modalStyle} className={classes.paper}>\r\n              <h2>{information.strDrink}</h2>\r\n              <h3 className=\"mt-4\">Instructions</h3>\r\n              <p>{information.strInstructions}</p>\r\n              <img className=\"img-fluid my-4\" src={information.strDrinkThumb} alt={information.strDrink}/>\r\n              <h3>Ingredients and quantities</h3>\r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t{ showIngredients(information) }\t\r\n\t\t\t\t\t\t\t</ul>\t\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n","import React, { useContext } from 'react';\r\nimport { RecipeContext } from '../context/RecipeContext';\r\nimport Recipe from './Recipe'\r\n\r\nconst RecipeList = () => {\r\n    const { recipes } = useContext(RecipeContext);\r\n\r\n    return (\r\n\r\n        <div className='row mt-5'>\r\n            {recipes.map(recipe => (\r\n                <Recipe \r\n                    key={recipe.idDrink}\r\n                    recipe={recipe}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default RecipeList;","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Form from './components/Form';\nimport RecipeList from './components/RecipeList'\nimport ProviderCategory from './context/CategoryContext';\nimport ProviderRecipe from './context/RecipeContext';\nimport ModalProvider from './context/ModalContext';\n\nfunction App() {\n  return (\n    <ProviderCategory>\n      <ProviderRecipe>\n        <ModalProvider>\n          <Header />\n          <div className='container mt-5'>\n              <div className='row'>\n                <Form />\n              </div>\n              <RecipeList /> \n          </div>\n        </ModalProvider>\n      </ProviderRecipe>\n    </ProviderCategory>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}